dominoinvocation
| where EventInfo_Time > ago(90d)
| extend OfficeBuildType = case(
            Environment contains "EnlistmentBuild", "enlist",
            Environment contains "MetaBuild", "meta",
            Environment contains "ProductBuild", "product", 
            ""),
    Codebase = extract("(Tenant=|Branch=)([^;]*)", 2, Environment),
    EnvironmentShort = extract("([^;]*)", 1 , Environment),
    CBQueue = extract("(cloudBuildQueue=)([^;]*)", 2 , Environment),
    Infra = case(
        UserName == "_qcloud1" or UserName == "_qcloud2" , "CB",
        (Environment contains "Dev" or Environment contains "WrapItUp") and UserName != "tpctext" and UserName != "y-arnold", "Dev",
        Environment contains "Self" and UserName != "tsebuild", "Dev",
        "Lab")
    | extend Customer = 
        case(
            EnvironmentShort contains "Office", "Office",
            EnvironmentShort contains "OSGTools", "OsgTools",
            EnvironmentShort contains "OSG", "WDG",
            EnvironmentShort contains "Self", "TSE",
            "Unknown") 
| project SessionId, RelatedSessionIdentifier , BuildInfo_IsDeveloperBuild, Environment, EventInfo_Time,OfficeBuildType, Codebase, Customer, CBQueue, Infra
| join kind= leftouter(
dominocompletion
| project SessionId, ErrorBucket, ExitKind 
) on SessionId 
| join kind= leftouter (
dominocatastrophicfailure
) on SessionId
| project SessionId , Exception, Environment, Customer, Codebase, Infra, CBQueue, RelatedSessionId, RelatedSessionIdentifier, BuildInfo_IsDeveloperBuild, ExitKind, ErrorBucket, EventInfo_Time
| extend InternalError = case(
    isnotempty(Exception), 1,
    ExitKind == "InternalError" or (Infra == "CB" and ExitKind == "InfrastructureError"), 1,
    0)
| extend UniqueSession = case(
    isnotempty(RelatedSessionIdentifier), RelatedSessionIdentifier,
    isnotempty(RelatedSessionId), RelatedSessionId,
    SessionId)
| extend Bucket = case(
    Exception contains "An error occurred when writing to a listener", "Listener",
    isnotempty(Exception), "Crash",
    isnotempty(ErrorBucket), ErrorBucket,
    isnotempty(ExitKind), "",
    "MissingDominoCompletionEvent")
// For CB, only look at non-probation queues
| join kind = leftouter (
    database("CloudBuildProd").BuildInfo
| where InProbation == 0
) on $left.UniqueSession == $right.BuildId
| where BuildInfo_IsDeveloperBuild != "True"
| where Customer != "TSE"
| where Infra != "CB" or isempty(BuildQueue) == false
| summarize any(SessionId), min(EventInfo_Time), BucketGroup = max(Bucket), max(Exception), sum(InternalError), any(Environment), any(BuildQueue), CBCanRetry = max(InternalRetryCount), CBReturnType = any(ReturnType) by UniqueSession, Customer, Codebase, Infra
| extend IsInternal = case(sum_InternalError > 0, 1, 0)
| extend month = startofmonth(min_EventInfo_Time)
| extend IsInteranAndCBNotRetryable = case(IsInternal > 0 and CBCanRetry == 0, 1, 0)
| summarize min(min_EventInfo_Time), count(), sum(IsInternal), sum(IsInteranAndCBNotRetryable) by Infra, month
| extend reliability = 100.0 - (100.0 * (sum_IsInternal * 1.0 / count_))
| extend reliabilityCBRetry = 100.0 - (100.0 * (sum_IsInteranAndCBNotRetryable * 1.0 / count_))
